version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: rss-aggregator-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rss_aggregator}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rss-network

  # RSS Aggregator API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rss-aggregator-api
    ports:
      - "${PORT:-8080}:8080"
    environment:
      PORT: ${PORT:-8080}
      DB_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-rss_aggregator}?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-change-me-in-production}
      ENV: ${ENV:-development}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rss-network
    restart: unless-stopped

  # Database migrations (runs once on startup)
  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    container_name: rss-aggregator-migrations
    environment:
      DB_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-rss_aggregator}?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rss-network
    profiles:
      - migrations

volumes:
  postgres_data:
    driver: local

networks:
  rss-network:
    driver: bridge
