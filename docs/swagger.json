{
    "swagger": "2.0",
    "info": {
        "description": "A production-ready RSS feed aggregator API built with Go",
        "title": "RSS Aggregator API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "mehmettalhairmak@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/v1/auth/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Logout user and invalidate refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "description": "Get new access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New tokens issued",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "Creates a new user account with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid input or duplicate email",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/feed": {
            "get": {
                "description": "Get a list of all RSS feeds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feeds"
                ],
                "summary": "Get all feeds",
                "responses": {
                    "200": {
                        "description": "List of feeds",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new RSS feed and automatically follows it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feeds"
                ],
                "summary": "Create RSS feed",
                "parameters": [
                    {
                        "description": "Feed data",
                        "name": "feed",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Feed created",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/feed_follows": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all feeds the user is following",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feed_follows"
                ],
                "summary": "Get followed feeds",
                "responses": {
                    "200": {
                        "description": "List of followed feeds",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Start following an RSS feed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feed_follows"
                ],
                "summary": "Follow a feed",
                "parameters": [
                    {
                        "description": "Feed follow data",
                        "name": "feed_follow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Feed follow created",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/feed_follows/{feedFollowID}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Stop following an RSS feed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feed_follows"
                ],
                "summary": "Unfollow a feed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed Follow ID",
                        "name": "feedFollowID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Feed unfollowed",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/posts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get posts from all followed feeds with cursor-based pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get user posts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of posts to return (max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination (RFC3339 timestamp)",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of posts",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/v1/ready": {
            "get": {
                "description": "Checks if the server is ready to handle requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the authenticated user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}